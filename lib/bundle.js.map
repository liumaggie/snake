{"version":3,"sources":["webpack:///webpack/bootstrap 0cabfa81c059b1a70ca0","webpack:///./lib/snake.js","webpack:///./lib/snake-view.js","webpack:///./lib/apple.js","webpack:///./lib/board.js","webpack:///./lib/main.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,KAAK,GAAG,IAAI;;AAEhD,kCAAkC,KAAK,GAAG,IAAI;;AAE9C;AACA;AACA,4BAA4B,KAAK;AACjC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC9EA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;;;;;;;AClCA;;AAEA;AACA;AACA;AACA,CAAC","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0cabfa81c059b1a70ca0","class Snake {\n  constructor(board) {\n    this.direction = \"N\";\n    this.board = board;\n\n    const mid = Math.floor(this.board.length/2) - 1;\n    const center = [mid, mid];\n    this.segments = [center];\n  }\n\n  head() {\n    return this.segments.slice(-1)[0];\n  }\n\n  move() {\n    const currDir = Snake.DIRS[this.direction];\n    let first = this.head();\n    const newX = first[0] + currDir[0];\n    const newY = first[1] + currDir[1];\n    this.checkGameover(newX, newY);\n\n    this.segments.push([newX, newY]);\n    this.segments.shift();\n\n\n    if (this.segments.length !== 0 && this.eatApple()) {\n      first = this.head();\n      const newPos = [first[0] + currDir[0], first[1] + currDir[1]];\n      if (!this.offBoundaries(newPos[0], newPos[1])) {\n        this.segments.push(newPos);\n      } else {\n        const tail = this.segments[0];\n        this.segments.unshift([tail[0] - currDir[0], tail[1] - currDir[1]]);\n      }\n      this.board.apple.updateApple();\n    }\n  }\n\n  isOccupied(pos) {\n    let occupied = false;\n    this.segments.forEach((segment) => {\n      if (segment[0] === pos[0] && segment[1] === pos[1]) {\n        occupied = true;\n      }\n    });\n    return occupied;\n  }\n\n  offBoundaries(x, y) {\n    if (x < 0 || y < 0 ||\n      x >= this.board.length || y >= this.board.length) {\n        return true;\n    }\n    return false;\n  }\n\n  eatApple() {\n    const head = this.head();\n    const x = head[0];\n    const y = head[1];\n\n    if (x === this.board.apple.pos[0] && y === this.board.apple.pos[1]) {\n      return true;\n    }\n    return false;\n  }\n\n  collide() {\n    for (let i=0; i < this.segments.length-1; i++) {\n      // checks if any snake segments are equal to the first segment\n      if (this.segments[i][0] === this.head()[0] &&\n        this.segments[i][1] === this.head()[1]) {\n          return true;\n      }\n    }\n    return false;\n  }\n\n  checkGameover(x, y) {\n    if (this.offBoundaries(x, y) || this.collide()) {\n      this.segments = [];\n    }\n  }\n\n  checkOpposite(x, y, dir) {\n    return this.direction === x && dir !== y;\n  }\n\n  turn(newDir) {\n    if (this.checkOpposite('N', 'S', newDir) ||\n        this.checkOpposite('S', 'N', newDir) ||\n        this.checkOpposite('W', 'E', newDir) ||\n        this.checkOpposite('E', 'W', newDir)) {\n          this.direction = newDir;\n        }\n  }\n}\n\nSnake.DIRS = {\n  'N': [-1, 0],\n  'S': [1, 0],\n  'E': [0, 1],\n  'W': [0, -1]\n};\n\nmodule.exports = Snake;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/snake.js\n// module id = 0\n// module chunks = 0","const Board = require('./board');\nconst Snake = require('./snake');\n\nclass SnakeView {\n  constructor($el) {\n    this.$el = $el;\n    this.board = new Board(20);\n    this.renderGrid();\n    this.updateRender();\n\n    $l(window).on('keydown', this.handleKey.bind(this));\n    this.interval = window.setInterval(this.step.bind(this), 100);\n  }\n\n  handleKey(event) {\n    event.preventDefault();\n    if (event.keyCode === 37) {\n      this.board.snake.turn('W');\n    } else if (event.keyCode === 38) {\n      this.board.snake.turn('N');\n    } else if (event.keyCode === 39) {\n      this.board.snake.turn('E');\n    } else if (event.keyCode === 40) {\n      this.board.snake.turn('S');\n    }\n  }\n\n  renderGrid() {\n    let html = \"\";\n    for (let i=0; i < this.board.length; i++) {\n      html += \"<ul>\";\n      for (let j=0; j < this.board.length; j++) {\n        html += \"<li></li>\";\n      }\n      html += \"</ul>\";\n    }\n    this.$el.html(html);\n  }\n\n  updateRender() {\n    this.board.snake.segments.forEach((segment, idx) => {\n      this.addClasses(segment, 'snake', idx);\n    });\n    this.addClasses(this.board.apple.pos, 'apple');\n  }\n\n  addClasses(obj, type, idx) {\n    let allUl = $l('ul');\n    const row = obj[0];\n    const col = obj[1];\n\n    if (!this.board.snake.offBoundaries()) {\n      const objCol = allUl.selectEl(col);\n      $l(objCol).addClass(`col-of-${type}-${idx}`);\n\n      let ulCol = $l(`ul.col-of-${type}-${idx}`);\n\n      const allLiInCol = ulCol.children();\n      const objLi = allLiInCol.selectEl(row);\n      $l(objLi).addClass(`${type}`);\n    }\n  }\n\n\n  step() {\n    if (this.board.snake.segments.length > 0) {\n      window.setTimeout(() => {\n        this.board.snake.move();\n        this.renderGrid();\n        this.updateRender();\n      }, 1000);\n    } else {\n      alert(\"You lose!\");\n      window.clearInterval(this.interval);\n    }\n  }\n}\n\nmodule.exports = SnakeView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/snake-view.js\n// module id = 1\n// module chunks = 0","class Apple {\n  constructor(board) {\n    this.board = board;\n    this.updateApple();\n  }\n\n  updateApple() {\n    let x = Math.floor(Math.random() * this.board.length);\n    let y = Math.floor(Math.random() * this.board.length);\n    while (this.board.snake.isOccupied([x, y])) {\n      x = Math.floor(Math.random() * this.board.length);\n      y = Math.floor(Math.random() * this.board.length);\n    }\n    this.pos = [x, y];\n  }\n}\n\nmodule.exports = Apple;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/apple.js\n// module id = 2\n// module chunks = 0","const Snake = require('./snake');\nconst Apple = require('./apple');\n\nclass Board {\n  constructor(length) {\n    this.length = length;\n    this.snake = new Snake(this);\n    this.apple = new Apple(this);\n    this.grid = this.setup();\n  }\n\n  setup() {\n    const grid = [];\n    for (let i=0; i < this.length; i++) {\n      let row = [];\n      for (let j=0; j < this.length; j++) {\n        row.push(\" \");\n      }\n      grid.push(row);\n    }\n    return grid;\n  }\n  //\n  // render() {\n  //   this.snake.segments.forEach((segment) => {\n  //     const x = segment[0];\n  //     const y = segment[1];\n  //     this.grid[x][y] = \"S\";\n  //   });\n  //   const applePos = this.apple.pos;\n  //   this.grid[applePos[0]][applePos[1]] = \"A\";\n  // }\n}\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/board.js\n// module id = 3\n// module chunks = 0","const SnakeView = require('./snake-view');\n\n$l(() => {\n  const root = $l('.snake-game');\n  new SnakeView(root);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}